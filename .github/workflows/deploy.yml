name: Deploy Static Site to S3
# Updated workflow - testing deploy-to-s3 pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change if needed

      - name: Debug AWS Identity
        run: aws sts get-caller-identity
      
      - name: Pre-Sync Safety Check
        run: |
          if [ -z "$(ls -A ./theprojectfolder/cloudresumechallenge/frontend)" ]; then
            echo "Local folder is empty. Aborting sync to prevent deletion."
            exit 1
          fi
      
      - name: Dry Run Sync Preview
        run: |
          aws s3 sync ./theprojectfolder/cloudresumechallenge/frontend/ s3://www.theprojectfolder.com \
            --exclude "*.pdf" \
            --dryrun
        
      - name: Deploy Website (Safe Upload)
        run: |
          aws s3 sync ./theprojectfolder/cloudresumechallenge/frontend/ s3://www.theprojectfolder.com \
            --exclude "*.pdf"
      

      - name: Upload PDFs with cache headers
        run: |
          pdfs=$(find "./theprojectfolder/cloudresumechallenge/frontend/assets" -name "*.pdf")
          if [ -z "$pdfs" ]; then
            echo "No PDF files found. Skipping upload."
            exit 0
          fi
      
          echo "$pdfs" | while IFS= read -r file; do
            echo "Uploading: $file"
            key="${file#./theprojectfolder/cloudresumechallenge/frontend/assets/}"
            aws s3 cp "$file" "s3://www.theprojectfolder.com/assets/$key" \
              --content-type application/pdf \
              --cache-control "no-cache, no-store, must-revalidate"
          done
          

      - name: Invalidate CloudFront Cache (All)
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E2UA1URROHIZXT \
            --paths "/*"

          aws cloudfront create-invalidation \
            --distribution-id E2YXOTOZ4EWSMK \
            --paths "/*"
